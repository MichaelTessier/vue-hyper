name: Development

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  pull_request:
    branches:
      - main
  workflow_call:

jobs:
  install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [18]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install
        with:
          node_version: ${{ matrix.node }}

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [18]
    needs: [install]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/lint
        with:
          node_version: ${{ matrix.node }}

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [18]
    needs: [lint]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/test
        with:
          node_version: ${{ matrix.node }}

  deploy-admin-preview:
    runs-on: ubuntu-latest
    # needs: [test]
    steps:
      - uses: actions/checkout@v4
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Link admin to Vercel
        run: vercel link --cwd apps/admin --yes --token=${{ secrets.VERCEL_TOKEN }}
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}


  deploy-components-preview:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Link component to Vercel
        run: vercel link packages/components
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  
  
