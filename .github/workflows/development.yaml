name: Development

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ID }}

on:
  pull_request:
    branches:
      - main
  workflow_call:

jobs:

  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    strategy:
      matrix:
        node: [18]
    outputs:
      admin: ${{ steps.filter.outputs.admin }}
      components: ${{ steps.filter.outputs.components }}
    steps:
    - name: Detect changes
      uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          admin:
            - 'apps/admin/**'
          components:
            - 'packages/components/**'

  install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [18]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install
        with:
          node_version: ${{ matrix.node }}

  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [18]
    needs: [changes, install]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/lint
        with:
          node_version: ${{ matrix.node }}
          context: 
            if ${{ needs.changes.outputs.admin == 'true' }} then 'admin' 
            else if ${{ needs.changes.outputs.components == 'true' }} then 'components'
            else 'all' fi

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [18]
    needs: [lint]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/test
        with:
          node_version: ${{ matrix.node }}

  deploy-admin-preview:
    runs-on: ubuntu-latest
    needs: [
      test, 
      changes
    ]
    if: ${{ needs.changes.outputs.admin == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Link admin to Vercel
        run: VERCEL_PROJECT_ID=${{ secrets.VERCEL_PROJECT_ADMIN_ID }} vercel link --cwd ./apps/admin --yes --token=${{ secrets.VERCEL_TOKEN }}
      - name: Pull Vercel Environment Information
        run: VERCEL_PROJECT_ID=${{ secrets.VERCEL_PROJECT_ADMIN_ID }} vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: VERCEL_PROJECT_ID=${{ secrets.VERCEL_PROJECT_ADMIN_ID }} vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: VERCEL_PROJECT_ID=${{ secrets.VERCEL_PROJECT_ADMIN_ID }} vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}


  deploy-components-preview:
    runs-on: ubuntu-latest
    needs: [
      test, 
      changes
    ]
    if: ${{ needs.changes.outputs.components == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Link component to Vercel
        run: VERCEL_PROJECT_ID=${{ secrets.VERCEL_PROJECT_COMPONENT_ID }} vercel link --cwd ./packages/components --yes --token=${{ secrets.VERCEL_TOKEN }}
      - name: Pull Vercel Environment Information
        run: VERCEL_PROJECT_ID=${{ secrets.VERCEL_PROJECT_COMPONENT_ID }} vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: VERCEL_PROJECT_ID=${{ secrets.VERCEL_PROJECT_COMPONENT_ID }} vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: VERCEL_PROJECT_ID=${{ secrets.VERCEL_PROJECT_COMPONENT_ID }} vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  
  
